{
  "main": {
    "id": "0477b7d17aca0ca0",
    "type": "split",
    "children": [
      {
        "id": "86e7f720e8d9f0ac",
        "type": "tabs",
        "children": [
          {
            "id": "fa3d4d2db2d24f6c",
            "type": "leaf",
            "state": {
              "type": "canvas",
              "state": {
                "file": "UnrealEngine/MetaHuman/DNA数据结构解析.canvas",
                "viewState": {
                  "x": 1115.9717272850032,
                  "y": 2050.250070543867,
                  "zoom": -0.3162239768801878
                }
              }
            }
          },
          {
            "id": "6fbee37260aca0ad",
            "type": "leaf",
            "state": {
              "type": "canvas",
              "state": {
                "file": "UnrealEngine/MetaHuman/RigLogic运行时流程.canvas",
                "viewState": {
                  "x": 3449.2467090653577,
                  "y": -486.7885236593013,
                  "zoom": -0.6134714015802429
                }
              }
            }
          }
        ]
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "445e0d9677804d88",
    "type": "split",
    "children": [
      {
        "id": "376560e67b640bf2",
        "type": "tabs",
        "children": [
          {
            "id": "c001a77f61a2bd59",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "6d70efcc7a99d111",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "tag:",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "7c8a1767301ea06a",
            "type": "leaf",
            "state": {
              "type": "bookmarks",
              "state": {}
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 357.5
  },
  "right": {
    "id": "7c6e048684854d63",
    "type": "split",
    "children": [
      {
        "id": "1b03fdadf7b3943f",
        "type": "tabs",
        "children": [
          {
            "id": "77e2a2ebd0435efd",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "UnrealEngine/MetaHuman/DNA数据结构解析.canvas",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "bb6b70742e9efb3c",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "UnrealEngine/MetaHuman/DNA数据结构解析.canvas",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "b966a6966fa23e42",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true
              }
            }
          },
          {
            "id": "a55c6d04c8df300f",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "UnrealEngine/MetaHuman/DNA数据结构解析.canvas"
              }
            }
          },
          {
            "id": "7a1a5eed47e0f0ea",
            "type": "leaf",
            "state": {
              "type": "all-properties",
              "state": {
                "sortOrder": "frequency"
              }
            }
          }
        ],
        "currentTab": 1
      }
    ],
    "direction": "horizontal",
    "width": 200,
    "collapsed": true
  },
  "left-ribbon": {
    "hiddenItems": {
      "switcher:Open quick switcher": false,
      "graph:Open graph view": false,
      "canvas:Create new canvas": false,
      "daily-notes:Open today's daily note": false,
      "templates:Insert template": false,
      "command-palette:Open command palette": false,
      "markdown-importer:Open format converter": false,
      "workspaces:Manage workspace layouts": false,
      "templater-obsidian:Templater": false,
      "obsidian42-brat:BRAT": false
    }
  },
  "active": "fa3d4d2db2d24f6c",
  "lastOpenFiles": [
    "UnrealEngine/MetaHuman/RigLogic运行时流程.canvas",
    "UnrealEngine/MetaHuman/DNA数据结构解析.canvas",
    "UnrealEngine/MetaHuman/3. RigLogic.md",
    "UnrealEngine/MetaHuman/2. DNA.md",
    "UnrealEngine/MetaHuman/RigLogicWhitePaper.pdf",
    "UnrealEngine/MetaHuman/4. 面部表情与自定义脸型.md",
    "C++/Effective Modern C++/1. 型别推导/条款3：理解decltype.md",
    "UnrealEngine/MetaHuman/RigLogic白皮书.pdf",
    "UnrealEngine/MetaHuman/attachments/Pic_078.png",
    "UnrealEngine/MetaHuman/attachments/Pic_077.png",
    "UnrealEngine/MetaHuman/attachments/Pic_076.png",
    "UnrealEngine/MetaHuman/attachments/courgette.log",
    "UnrealEngine/MetaHuman/attachments/Pic_075.png",
    "UnrealEngine/MetaHuman/attachments/Pic_074.png",
    "UnrealEngine/MetaHuman/attachments/Pic_073.png",
    "UnrealEngine/MetaHuman/attachments/Pic_072.png",
    "UnrealEngine/MetaHuman/attachments/Pic_071.png",
    "UnrealEngine/MetaHuman/attachments/Pic_070.png",
    "UnrealEngine/MetaHuman/1. 初探MetaHuman.md",
    "UnrealEngine/MetaHuman/5. 基于控制调整的捏脸方案.md",
    "UnrealEngine/MetaHuman/attachments/Omar.dna",
    "UnrealEngine/MetaHuman/attachments/Omar.json",
    "UnrealEngine/MetaHuman/Omar.json",
    "UnrealEngine/MetaHuman/Omar.dna",
    "UnrealEngine/MetaHuman/attachments/Pic_069.png",
    "数学基础/3D数学基础/27. 稀疏矩阵行列压缩(Compressed Sparse Row Column Matrix).md",
    "UnrealEngine/Animation/SkeletalMeshComponent/1. SkeletalMeshComponent组件.md",
    "UnrealEngine/MetaHuman/RigLogic调整流程---基于骨骼调整的捏脸方案.canvas",
    "UnrealEngine/MetaHuman/RigLogic调整流程---基于控制调整的捏脸方案.canvas",
    "UnrealEngine/MetaHuman/0. 目录.md",
    "UnrealEngine/MetaHuman/RigLogic运行时流程 - 副本.canvas",
    "UnrealEngine/MetaHuman/RigLogic调整流程---基于控制器调整的捏脸方案.canvas",
    "UnrealEngine/MetaHuman/RigLogic调整流程---基于骨骼调整的捏脸方案 - 副本.canvas",
    "UnrealEngine/MetaHuman/attachments/Pic_060.png.saving",
    "C++/Effective Modern C++/3. 转向现代C++/条款9：优先选用别名声明而非typedef.md",
    "C++/Effective Modern C++/3. 转向现代C++/条款8：优先选用nullptr而非0或NULL.md",
    "C++/Effective Modern C++/3. 转向现代C++/条款7：创建对象时注意区分()和{}.md",
    "C++/Effective Modern C++/3. 转向现代C++/条款17：理解特种成员函数的生成机制.md",
    "C++/Effective Modern C++/3. 转向现代C++/条款16：保证const成员函数的线程安全性.md",
    "C++/Effective Modern C++/3. 转向现代C++/条款15：只要有可能使用constexpr就使用它.md",
    "C++/Effective Modern C++/3. 转向现代C++/条款14：只要函数与不会抛出异常就为其加上noexcept声明.md",
    "C++/Effective Modern C++/3. 转向现代C++/条款13：优先选用const_iterator而非iterator.md",
    "C++/Effective Modern C++/3. 转向现代C++/条款12：为意在改写的函数添加override声明.md",
    "C++/Effective Modern C++/3. 转向现代C++/条款11：优先选用删除函数而非private未定义函数.md",
    "C++/Effective Modern C++/3. 转向现代C++/条款10：优先选用限定作用域的枚举型别，而非不限作用域的枚举型别.md",
    "C++/Effective Modern C++/3. 转向现代C++/3. 转向现代C++.md",
    "C++/Effective Modern C++/3. 转向现代C++",
    "C++/Effective Modern C++/2. Auto/条款6：当auto推导的型别不符合要求时，使用带显示型别的初始化物习惯用法.md",
    "C++/Effective Modern C++/2. Auto/条款5：优先选用auto而非显示型别声明.md",
    "C++/Effective Modern C++/2. Auto/2. Auto.md",
    "C++/Effective Modern C++/2. Auto",
    "C++/Effective Modern C++/1. 型别推导/条款4：掌握查看型别推导结果的方法.md",
    "UnrealEngine/Animation/SkeletalMeshComponent/12. 骨骼动画更新流程.canvas",
    "未命名.canvas"
  ]
}