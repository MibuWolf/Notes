{
  "main": {
    "id": "0477b7d17aca0ca0",
    "type": "split",
    "children": [
      {
        "id": "86e7f720e8d9f0ac",
        "type": "tabs",
        "children": [
          {
            "id": "fa3d4d2db2d24f6c",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "C++/Effective Modern C++/2. Auto/条款6：当auto推导的型别不符合要求时，使用带显示型别的初始化物习惯用法.md",
                "mode": "source",
                "source": true
              }
            },
            "group": "a420730c141e0d6b"
          }
        ]
      },
      {
        "id": "c73f48b44a858a89",
        "type": "tabs",
        "children": [
          {
            "id": "4a4eda9348915acd",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "C++/Effective Modern C++/2. Auto/条款6：当auto推导的型别不符合要求时，使用带显示型别的初始化物习惯用法.md",
                "mode": "preview",
                "source": true
              }
            },
            "group": "a420730c141e0d6b"
          }
        ]
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "445e0d9677804d88",
    "type": "split",
    "children": [
      {
        "id": "376560e67b640bf2",
        "type": "tabs",
        "children": [
          {
            "id": "c001a77f61a2bd59",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "6d70efcc7a99d111",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "tag:",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "7c8a1767301ea06a",
            "type": "leaf",
            "state": {
              "type": "bookmarks",
              "state": {}
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 309.5
  },
  "right": {
    "id": "7c6e048684854d63",
    "type": "split",
    "children": [
      {
        "id": "1b03fdadf7b3943f",
        "type": "tabs",
        "children": [
          {
            "id": "77e2a2ebd0435efd",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "C++/Effective Modern C++/2. Auto/条款6：当auto推导的型别不符合要求时，使用带显示型别的初始化物习惯用法.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "bb6b70742e9efb3c",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "C++/Effective Modern C++/2. Auto/条款6：当auto推导的型别不符合要求时，使用带显示型别的初始化物习惯用法.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "b966a6966fa23e42",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true
              }
            }
          },
          {
            "id": "a55c6d04c8df300f",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "C++/Effective Modern C++/2. Auto/条款6：当auto推导的型别不符合要求时，使用带显示型别的初始化物习惯用法.md"
              }
            }
          },
          {
            "id": "7a1a5eed47e0f0ea",
            "type": "leaf",
            "state": {
              "type": "all-properties",
              "state": {
                "sortOrder": "frequency",
                "showSearch": false,
                "searchQuery": ""
              }
            }
          }
        ],
        "currentTab": 1
      }
    ],
    "direction": "horizontal",
    "width": 200,
    "collapsed": true
  },
  "left-ribbon": {
    "hiddenItems": {
      "switcher:Open quick switcher": false,
      "graph:Open graph view": false,
      "canvas:Create new canvas": false,
      "daily-notes:Open today's daily note": false,
      "templates:Insert template": false,
      "command-palette:Open command palette": false,
      "markdown-importer:Open format converter": false,
      "workspaces:Manage workspace layouts": false,
      "templater-obsidian:Templater": false,
      "obsidian42-brat:BRAT": false
    }
  },
  "active": "fa3d4d2db2d24f6c",
  "lastOpenFiles": [
    "C++/Effective Modern C++/2. Auto/条款5：优先选用auto而非显示型别声明.md",
    "C++/Effective Modern C++/2. Auto/条款6：当auto推导的型别不符合要求时，使用带显示型别的初始化物习惯用法.md",
    "图形学/计算机图形学/14. 反射模型.md",
    "图形学/计算机图形学/13. 全局光照.md",
    "图形学/计算机图形学/12. 光照.md",
    "图形学/计算机图形学/9. 计算机动画.md",
    "图形学/计算机图形学/7. 光线追踪1.md",
    "UnrealEngine/Animation/SkeletalMesh/10. 使用动态骨骼进行布料模拟.md",
    "UnrealEngine/Animation/SkeletalMesh/9. 布料模拟.md",
    "UnrealEngine/Animation/SkeletalMesh/8. PhysicsControl组件.md",
    "UnrealEngine/Animation/SkeletalMesh/7. PhysicalAnimation组件.md",
    "UnrealEngine/Animation/SkeletalMesh/2. 动画蓝图的更新与评价(UAnimInstance).md",
    "UnrealEngine/Animation/SkeletalMesh/1. SkeletalMeshComponent组件.md",
    "计算机理论基础/设计模式/2. 行为型模式.md",
    "计算机理论基础/设计模式/3. 结构型模式.md",
    "UnityGame/1. 游戏中常用的系统管理器.md",
    "UnityGame/0. 整体结构框架.md",
    "UnrealEngine/MetaHuman/RigLogic调整流程---基于骨骼调整的捏脸方案.canvas",
    "UnityGame/12. 移动与角色控制.md",
    "UnityGame/attachments/2. 常用Manager.md",
    "UnityGame/attachments/Pic_001.png",
    "UnityGame/3. StrangeIOC(MVCS框架).md",
    "UnityGame/5. Morpheme动画控制.md",
    "UnityGame/4. 网络通信.md",
    "UnityGame/14. 渲染流水线.md",
    "UnityGame/9. 渲染相关.md",
    "UnityGame/9. AI系统.md",
    "UnityGame/8. 基于体素的碰撞及寻路.md",
    "C++/Effective Modern C++/attachments/Pic_001.png",
    "C++/Effective Modern C++/attachments",
    "C++/Effective Modern C++/新建文件夹",
    "C++/C++并发编程实战/attachments/Pic_053.png",
    "C++/C++并发编程实战/attachments/Pic_052.png",
    "C++/C++并发编程实战/attachments/Pic_051.png",
    "C++/C++并发编程实战/attachments/Pic_050.png",
    "C++/C++并发编程实战/attachments/Pic_049.png",
    "C++/C++并发编程实战/attachments/Pic_048.png",
    "UnrealEngine/MetaHuman/RigLogic白皮书.pdf",
    "UnrealEngine/MetaHuman/DNA数据结构解析.canvas",
    "UnrealEngine/MetaHuman/RigLogic调整流程---基于控制调整的捏脸方案.canvas",
    "C++/C++并发编程实战/attachments/Pic_047.png",
    "C++/C++并发编程实战/attachments/Pic_046.png",
    "C++/C++并发编程实战/attachments",
    "C++/C++并发编程实战/新建文件夹",
    "C++/C++并发编程实战",
    "C++/新建文件夹",
    "UnrealEngine/Animation/SkeletalMesh/attachments",
    "UnrealEngine/Animation/SkeletalMesh/12. 骨骼动画更新流程.canvas",
    "UnrealEngine/Animation/SkeletalMesh",
    "UnityGame/attachments",
    "UnrealEngine/MetaHuman/RigLogic运行时流程.canvas",
    "UnrealEngine/MetaHuman/RigLogic运行时流程 - 副本.canvas",
    "UnrealEngine/MetaHuman/RigLogic调整流程---基于控制器调整的捏脸方案.canvas",
    "UnrealEngine/MetaHuman/RigLogic调整流程---基于骨骼调整的捏脸方案 - 副本.canvas",
    "UnrealEngine/Animation/SkeletalMeshComponent/12. 骨骼动画更新流程.canvas",
    "未命名.canvas"
  ]
}